[project]
name = "github"
version = "0.1.0"
description = "A project for managing GitHub resources with Pulumi."
authors = [
    { name = "Edoardo Rosa", email = "6991986+notdodo@users.noreply.github.com" },
]
requires-python = ">=3.12"
readme = "README.md"
license = "MIT"
keywords = ["pulumi", "github", "cloud", "infrastructure-as-code"]
dependencies = ["pulumi>=3.190.0,<4", "pulumi-github>=6.7.3,<7"]

[project.urls]
Homepage = "https://github.com/notdodo/github"
Repository = "https://github.com/notdodo/github"
Documentation = "https://github.com/notdodo/github/blob/main/README.md"

[dependency-groups]
dev = [
    "mypy[faster-cache]>=1.17.1,<2",
    "pydantic>=2.11.7,<3",
    "pylint>=3.3.8,<4",
    "ruff>=0.12.9,<0.13",
]

[tool.uv]
package = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
output-format = "github"

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = ["ALL"]
ignore = ["D2", "D4", "ANN", "COM812", "ISC001", "ERA001", "S106"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
pretty = true
show_error_codes = true
show_error_context = true
implicit_reexport = true
namespace_packages = true

[tool.pylint."MESSAGES CONTROL"]
persistent = "no"
disable = ["fixme", "line-too-long"]
